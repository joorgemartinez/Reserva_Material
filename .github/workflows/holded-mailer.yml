name: Holded New Orders Mailer
on:
  schedule:
    - cron: "*/5 * * * *"   # cada 5 minutos (UTC)
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: holded-mailer
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Restaura el estado de pedidos ya enviados (sin commitear al repo)
      - name: Restore state cache
        uses: actions/cache/restore@v4
        with:
          path: .state/processed_salesorders.json
          key: holded-state-${{ github.run_id }}
          restore-keys: |
            holded-state-

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run mailer
        env:
          HOLDED_API_KEY: ${{ secrets.HOLDED_API_KEY }}
          HOLDED_USE_BEARER: ${{ secrets.HOLDED_USE_BEARER }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
        run: |
          python so_mapper.py --days 1 --limit 500 \
            --state-file .state/processed_salesorders.json \
            --send-email

      # Guarda el estado para la próxima ejecución
      - name: Save state cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .state/processed_salesorders.json
          key: holded-state-${{ github.run_id }}
